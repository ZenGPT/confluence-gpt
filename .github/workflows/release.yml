name: Release
on:
  release:
    types: [prereleased, released]

jobs:
  release:
    name: ${{ github.event.release.tag_name }} to production
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.release.tag_name }}
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '20.11.1'
          cache: npm
      - name: Install dependencies
        run: npm install
      - name: Build
        run: npm run build
      - name: Generate Git Info File
        uses: ./.github/actions/git-info
      - name: Deploy to server
        uses: easingthemes/ssh-deploy@v4.1.8
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_KEY }}
          REMOTE_HOST: ${{ secrets.HOST_IP }}
          REMOTE_USER: ${{ secrets.HOST_USER }}
          TARGET: /home/${{ secrets.HOST_USER }}/ace-server/
          EXCLUDE: '/.cache/, /.github/, /.vscode/, /.git/, modules/confluence-plugin/node_modules/'
          SCRIPT_AFTER: |
            cd /home/${{ secrets.HOST_USER }}/ace-server/
            echo "DATABASE_URL=postgresql://${{ env.GPT_ACE_DB_USERNAME }}:${{ secrets.GPT_ACE_DB_PASSWORD }}@${{env.POSTGRESQL_BIND_INNER_IP }}:5432/${{ env.GPT_ACE_DB_NAME }} LOCAL_BASE_URL=${{ env.LOCAL_BASE_URL }} PORT=${{ env.APP_PORT }} NODE_ENV=production OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} CF_R2_ACCESS_KEY=${{ env.CF_R2_ACCESS_KEY }} CF_R2_SECRET_KEY=${{ secrets.CF_R2_SECRET_KEY }} pm2 reload app --update-env" > /tmp/github-action-cmd.txt
